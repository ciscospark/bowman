#!/usr/bin/env node

const path = require('path');

// TODO move exit code definitions to a separate file
const E_UNHANDLED_REJECTION = 64;

const DEV = process.env.NODE_ENV === 'development';

if (DEV) {
  /* eslint-disable global-require */
  /* eslint-disable import/no-unassigned-import */
  /* eslint-disable import/no-extraneous-dependencies */
  require('babel-register');
}

/**
 * Loads the right file depending on environment
 * @private
 * @param {string} packageName
 * @returns {module}
 */
function requireHelper(packageName) {
  return path.resolve(__dirname, DEV ? '../src' : '../cjs', packageName);
}

const {parseGitCommands} = require(requireHelper('lib/git'));

// eslint-disable-next-line no-unused-expressions
const {argv} = require('yargs')
  .options({
    debug: {
      default: false,
      description: 'Print stacktraces',
      type: 'boolean'
    }
  })
  .env('')
  .config(parseGitCommands())
  .commandDir(requireHelper('commands'))
  .demandCommand(1)
  .help();

process.on('unhandledRejection', (err) => {
  const cmd = `bowman ${process.argv.slice(2)
    .join(' ')}`;
  console.error(`Failed to execute "${cmd}"`);
  console.error(err.toString());
  if (argv && argv.debug || DEV) {
    console.error(err);
  }
  // eslint-disable-next-line no-process-exit
  process.exit(E_UNHANDLED_REJECTION);
});
